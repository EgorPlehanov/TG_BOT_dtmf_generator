import telebot
from decouple import config
import re

from dtmf import DTMF


API_TOKEN = config('BOT_TOKEN')
bot = telebot.TeleBot(API_TOKEN)
dtmf = DTMF()


@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    bot.reply_to(message, (
        f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n'
        '–Ø - –±–æ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è DTMF —Å–∏–≥–Ω–∞–ª–∞. ü§ñ\n\n'
        'üìû –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ DTMF —Å–∏–≥–Ω–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –î–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã: 0-9, *, # –∏ A-D.\n\n'
        'üéôÔ∏è –î–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è DTMF —Å–∏–≥–Ω–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n'
        'üìö –û—Ç–ø—Ä–∞–≤—å—Ç–µ /info, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ DTMF –∏ –∫–∞–∫ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.'
    ))



@bot.message_handler(commands=['info'])
def send_info(message):
    with open("src\\text\dtmf_info.txt", "r", encoding="utf-8") as file:
        dtmf_info = file.read()
        bot.send_message(
            message.chat.id,
            dtmf_info,
            parse_mode='HTML'
        )
    with open('src\img\dtmf_frequencies.png', 'rb') as dtmf_frequencies:
        bot.send_photo(
            message.chat.id,
            caption='–ß–∞—Å—Ç–æ—Ç—ã DTMF',
            photo=dtmf_frequencies, 
        )


@bot.message_handler(content_types=['text'])
def handle_number_text(message):
    phone_number = message.text.strip().upper()

    if not re.match(r"^[0-9#*A-D]+$", phone_number):
        bot.reply_to(message, '–ù–∞–ø–∏—à–∏ –º–Ω–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞,\n—Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —Ü–∏—Ñ—Ä –∏ –∑–Ω–∞–∫–æ–≤ # –∏ *.')
        return

    signal_file, format = dtmf.get_dtmf_signal_file(phone_number, format="mp3")

    bot.send_audio(
        chat_id=message.chat.id,
        audio=signal_file,
        title=f"DTMF: {phone_number}",
        performer="DTMF Bot",
        reply_to_message_id=message.message_id
    )


@bot.message_handler(content_types=['audio', 'voice', 'document'])
def voice_processing(message):
    answer_message = bot.reply_to(message, f"–ù—É–∂–Ω–æ –ø–æ–¥—É–º–∞—Ç—å...")

    file_info, file_format = None, None
    match message.content_type:
        case 'audio':
            file_info = bot.get_file(message.audio.file_id)
            file_format = 'mp3'
        case 'voice':
            file_info = bot.get_file(message.voice.file_id)
            file_format = 'ogg'
        case 'document':
            file_info = bot.get_file(message.document.file_id)
            file_format = 'wav'
        case _:
            bot.delete_message(answer_message.chat.id, answer_message.message_id)
            bot.reply_to(message, f"–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–∏ÃÜ —Ç–∏–ø —Ñ–∞–∏ÃÜ–ª–∞.")
            return

    downloaded_file = bot.download_file(file_info.file_path)

    phone_number, images = dtmf.recognize_dtmf(downloaded_file, file_format)

    if phone_number:
        bot.edit_message_text(
            f"–ù–∞–±—Ä–∞–Ω –Ω–æ–º–µ—Ä: {phone_number}",
            answer_message.chat.id,
            answer_message.message_id,
            disable_web_page_preview = True
        )
        bot.send_media_group(
            answer_message.chat.id,
            [telebot.types.InputMediaPhoto(img) for img in images]
        )
    else:
        bot.edit_message_text("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –Ω–æ–º–µ—Ä.", answer_message.chat.id, answer_message.message_id)


@bot.message_handler(func=lambda message: True)
def echo_message(message):
    bot.reply_to(message, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ /help.')


bot.infinity_polling()


# venv_dtmf\Scripts\activate
# python app\dtmf_tg_bot.py